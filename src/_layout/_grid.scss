.l-constrained {
  @include clearfix();

  max-width: $layout-max-width;
  margin: 0 auto;
  padding: 0 $layout-spacing;

  @include respond-to('large') {
    padding: 0 ($layout-spacing * 3);
  }
}

.l-units {
  @include clearfix();

  margin-left: -#{$layout-gutter-width};
}

[class^="l-u--"],
[class*="l-u--"] {
  box-sizing: border-box;
  float: left;
  padding-left: $layout-gutter-width;
}

// Mobile First Columns
@for $i from 1 through $layout-max-columns {
  .l-u--#{$i}-#{$layout-max-columns} {
    @include col($i, $layout-max-columns);
  }

  @if $i < $layout-max-columns {
    .l-u-push--#{$i}-#{$layout-max-columns} {
      @include col-push($i, $layout-max-columns);
    }

    .l-u-pull--#{$i}-#{$layout-max-columns} {
      @include col-pull($i, $layout-max-columns);
    }
  }

  // Breakpoints
  @each $breakpoint, $size in $layout-breakpoints {
    @if $i < $layout-max-columns {
      @include respond(quote(#{$breakpoint})) {
        .l-u--#{$breakpoint}-#{$i}-#{$layout-max-columns} {
          @include col($i, $layout-max-columns);
        }

        .l-u-push--#{$breakpoint}-#{$i}-#{$layout-max-columns} {
          @include col-push($i, $layout-max-columns);
        }

        .l-u-pull--#{$breakpoint}-#{$i}-#{$layout-max-columns} {
          @include col-pull($i, $layout-max-columns);
        }
      }
    }
  }
}

